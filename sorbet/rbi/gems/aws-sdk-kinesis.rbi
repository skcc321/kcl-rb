# This file is autogenerated. Do not edit it by hand. Regenerate it with:
#   srb rbi gems

# typed: true
#
# If you would like to make changes to this file, great! Please create the gem's shim here:
#
#   https://github.com/sorbet/sorbet-typed/new/master?filename=lib/aws-sdk-kinesis/all/aws-sdk-kinesis.rbi
#
# aws-sdk-kinesis-1.41.0

module Aws::Kinesis
end
module Aws::Kinesis::Types
end
class Anonymous_Struct_266 < Struct
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
  def stream_name; end
  def stream_name=(_); end
  def tags; end
  def tags=(_); end
end
class Aws::Kinesis::Types::AddTagsToStreamInput < Anonymous_Struct_266
  include Aws::Structure
end
class Anonymous_Struct_267 < Struct
  def hash_key_range; end
  def hash_key_range=(_); end
  def parent_shards; end
  def parent_shards=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
  def shard_id; end
  def shard_id=(_); end
end
class Aws::Kinesis::Types::ChildShard < Anonymous_Struct_267
  include Aws::Structure
end
class Anonymous_Struct_268 < Struct
  def consumer_arn; end
  def consumer_arn=(_); end
  def consumer_creation_timestamp; end
  def consumer_creation_timestamp=(_); end
  def consumer_name; end
  def consumer_name=(_); end
  def consumer_status; end
  def consumer_status=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::Kinesis::Types::Consumer < Anonymous_Struct_268
  include Aws::Structure
end
class Anonymous_Struct_269 < Struct
  def consumer_arn; end
  def consumer_arn=(_); end
  def consumer_creation_timestamp; end
  def consumer_creation_timestamp=(_); end
  def consumer_name; end
  def consumer_name=(_); end
  def consumer_status; end
  def consumer_status=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
  def stream_arn; end
  def stream_arn=(_); end
end
class Aws::Kinesis::Types::ConsumerDescription < Anonymous_Struct_269
  include Aws::Structure
end
class Anonymous_Struct_270 < Struct
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
  def shard_count; end
  def shard_count=(_); end
  def stream_mode_details; end
  def stream_mode_details=(_); end
  def stream_name; end
  def stream_name=(_); end
end
class Aws::Kinesis::Types::CreateStreamInput < Anonymous_Struct_270
  include Aws::Structure
end
class Anonymous_Struct_271 < Struct
  def retention_period_hours; end
  def retention_period_hours=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
  def stream_name; end
  def stream_name=(_); end
end
class Aws::Kinesis::Types::DecreaseStreamRetentionPeriodInput < Anonymous_Struct_271
  include Aws::Structure
end
class Anonymous_Struct_272 < Struct
  def enforce_consumer_deletion; end
  def enforce_consumer_deletion=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
  def stream_name; end
  def stream_name=(_); end
end
class Aws::Kinesis::Types::DeleteStreamInput < Anonymous_Struct_272
  include Aws::Structure
end
class Anonymous_Struct_273 < Struct
  def consumer_arn; end
  def consumer_arn=(_); end
  def consumer_name; end
  def consumer_name=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
  def stream_arn; end
  def stream_arn=(_); end
end
class Aws::Kinesis::Types::DeregisterStreamConsumerInput < Anonymous_Struct_273
  include Aws::Structure
end
class Aws::Kinesis::Types::DescribeLimitsInput < Aws::EmptyStructure
end
class Anonymous_Struct_274 < Struct
  def on_demand_stream_count; end
  def on_demand_stream_count=(_); end
  def on_demand_stream_count_limit; end
  def on_demand_stream_count_limit=(_); end
  def open_shard_count; end
  def open_shard_count=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
  def shard_limit; end
  def shard_limit=(_); end
end
class Aws::Kinesis::Types::DescribeLimitsOutput < Anonymous_Struct_274
  include Aws::Structure
end
class Anonymous_Struct_275 < Struct
  def consumer_arn; end
  def consumer_arn=(_); end
  def consumer_name; end
  def consumer_name=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
  def stream_arn; end
  def stream_arn=(_); end
end
class Aws::Kinesis::Types::DescribeStreamConsumerInput < Anonymous_Struct_275
  include Aws::Structure
end
class Anonymous_Struct_276 < Struct
  def consumer_description; end
  def consumer_description=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::Kinesis::Types::DescribeStreamConsumerOutput < Anonymous_Struct_276
  include Aws::Structure
end
class Anonymous_Struct_277 < Struct
  def exclusive_start_shard_id; end
  def exclusive_start_shard_id=(_); end
  def limit; end
  def limit=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
  def stream_name; end
  def stream_name=(_); end
end
class Aws::Kinesis::Types::DescribeStreamInput < Anonymous_Struct_277
  include Aws::Structure
end
class Anonymous_Struct_278 < Struct
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
  def stream_description; end
  def stream_description=(_); end
end
class Aws::Kinesis::Types::DescribeStreamOutput < Anonymous_Struct_278
  include Aws::Structure
end
class Anonymous_Struct_279 < Struct
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
  def stream_name; end
  def stream_name=(_); end
end
class Aws::Kinesis::Types::DescribeStreamSummaryInput < Anonymous_Struct_279
  include Aws::Structure
end
class Anonymous_Struct_280 < Struct
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
  def stream_description_summary; end
  def stream_description_summary=(_); end
end
class Aws::Kinesis::Types::DescribeStreamSummaryOutput < Anonymous_Struct_280
  include Aws::Structure
end
class Anonymous_Struct_281 < Struct
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
  def shard_level_metrics; end
  def shard_level_metrics=(_); end
  def stream_name; end
  def stream_name=(_); end
end
class Aws::Kinesis::Types::DisableEnhancedMonitoringInput < Anonymous_Struct_281
  include Aws::Structure
end
class Anonymous_Struct_282 < Struct
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
  def shard_level_metrics; end
  def shard_level_metrics=(_); end
  def stream_name; end
  def stream_name=(_); end
end
class Aws::Kinesis::Types::EnableEnhancedMonitoringInput < Anonymous_Struct_282
  include Aws::Structure
end
class Anonymous_Struct_283 < Struct
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
  def shard_level_metrics; end
  def shard_level_metrics=(_); end
end
class Aws::Kinesis::Types::EnhancedMetrics < Anonymous_Struct_283
  include Aws::Structure
end
class Anonymous_Struct_284 < Struct
  def current_shard_level_metrics; end
  def current_shard_level_metrics=(_); end
  def desired_shard_level_metrics; end
  def desired_shard_level_metrics=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
  def stream_name; end
  def stream_name=(_); end
end
class Aws::Kinesis::Types::EnhancedMonitoringOutput < Anonymous_Struct_284
  include Aws::Structure
end
class Anonymous_Struct_285 < Struct
  def message; end
  def message=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::Kinesis::Types::ExpiredIteratorException < Anonymous_Struct_285
  include Aws::Structure
end
class Anonymous_Struct_286 < Struct
  def message; end
  def message=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::Kinesis::Types::ExpiredNextTokenException < Anonymous_Struct_286
  include Aws::Structure
end
class Anonymous_Struct_287 < Struct
  def limit; end
  def limit=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
  def shard_iterator; end
  def shard_iterator=(_); end
end
class Aws::Kinesis::Types::GetRecordsInput < Anonymous_Struct_287
  include Aws::Structure
end
class Anonymous_Struct_288 < Struct
  def child_shards; end
  def child_shards=(_); end
  def millis_behind_latest; end
  def millis_behind_latest=(_); end
  def next_shard_iterator; end
  def next_shard_iterator=(_); end
  def records; end
  def records=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::Kinesis::Types::GetRecordsOutput < Anonymous_Struct_288
  include Aws::Structure
end
class Anonymous_Struct_289 < Struct
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
  def shard_id; end
  def shard_id=(_); end
  def shard_iterator_type; end
  def shard_iterator_type=(_); end
  def starting_sequence_number; end
  def starting_sequence_number=(_); end
  def stream_name; end
  def stream_name=(_); end
  def timestamp; end
  def timestamp=(_); end
end
class Aws::Kinesis::Types::GetShardIteratorInput < Anonymous_Struct_289
  include Aws::Structure
end
class Anonymous_Struct_290 < Struct
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
  def shard_iterator; end
  def shard_iterator=(_); end
end
class Aws::Kinesis::Types::GetShardIteratorOutput < Anonymous_Struct_290
  include Aws::Structure
end
class Anonymous_Struct_291 < Struct
  def ending_hash_key; end
  def ending_hash_key=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
  def starting_hash_key; end
  def starting_hash_key=(_); end
end
class Aws::Kinesis::Types::HashKeyRange < Anonymous_Struct_291
  include Aws::Structure
end
class Anonymous_Struct_292 < Struct
  def retention_period_hours; end
  def retention_period_hours=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
  def stream_name; end
  def stream_name=(_); end
end
class Aws::Kinesis::Types::IncreaseStreamRetentionPeriodInput < Anonymous_Struct_292
  include Aws::Structure
end
class Anonymous_Struct_293 < Struct
  def event_type; end
  def event_type=(_); end
  def message; end
  def message=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::Kinesis::Types::InternalFailureException < Anonymous_Struct_293
  include Aws::Structure
end
class Anonymous_Struct_294 < Struct
  def message; end
  def message=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::Kinesis::Types::InvalidArgumentException < Anonymous_Struct_294
  include Aws::Structure
end
class Anonymous_Struct_295 < Struct
  def event_type; end
  def event_type=(_); end
  def message; end
  def message=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::Kinesis::Types::KMSAccessDeniedException < Anonymous_Struct_295
  include Aws::Structure
end
class Anonymous_Struct_296 < Struct
  def event_type; end
  def event_type=(_); end
  def message; end
  def message=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::Kinesis::Types::KMSDisabledException < Anonymous_Struct_296
  include Aws::Structure
end
class Anonymous_Struct_297 < Struct
  def event_type; end
  def event_type=(_); end
  def message; end
  def message=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::Kinesis::Types::KMSInvalidStateException < Anonymous_Struct_297
  include Aws::Structure
end
class Anonymous_Struct_298 < Struct
  def event_type; end
  def event_type=(_); end
  def message; end
  def message=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::Kinesis::Types::KMSNotFoundException < Anonymous_Struct_298
  include Aws::Structure
end
class Anonymous_Struct_299 < Struct
  def event_type; end
  def event_type=(_); end
  def message; end
  def message=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::Kinesis::Types::KMSOptInRequired < Anonymous_Struct_299
  include Aws::Structure
end
class Anonymous_Struct_300 < Struct
  def event_type; end
  def event_type=(_); end
  def message; end
  def message=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::Kinesis::Types::KMSThrottlingException < Anonymous_Struct_300
  include Aws::Structure
end
class Anonymous_Struct_301 < Struct
  def message; end
  def message=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::Kinesis::Types::LimitExceededException < Anonymous_Struct_301
  include Aws::Structure
end
class Anonymous_Struct_302 < Struct
  def exclusive_start_shard_id; end
  def exclusive_start_shard_id=(_); end
  def max_results; end
  def max_results=(_); end
  def next_token; end
  def next_token=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
  def shard_filter; end
  def shard_filter=(_); end
  def stream_creation_timestamp; end
  def stream_creation_timestamp=(_); end
  def stream_name; end
  def stream_name=(_); end
end
class Aws::Kinesis::Types::ListShardsInput < Anonymous_Struct_302
  include Aws::Structure
end
class Anonymous_Struct_303 < Struct
  def next_token; end
  def next_token=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
  def shards; end
  def shards=(_); end
end
class Aws::Kinesis::Types::ListShardsOutput < Anonymous_Struct_303
  include Aws::Structure
end
class Anonymous_Struct_304 < Struct
  def max_results; end
  def max_results=(_); end
  def next_token; end
  def next_token=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
  def stream_arn; end
  def stream_arn=(_); end
  def stream_creation_timestamp; end
  def stream_creation_timestamp=(_); end
end
class Aws::Kinesis::Types::ListStreamConsumersInput < Anonymous_Struct_304
  include Aws::Structure
end
class Anonymous_Struct_305 < Struct
  def consumers; end
  def consumers=(_); end
  def next_token; end
  def next_token=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::Kinesis::Types::ListStreamConsumersOutput < Anonymous_Struct_305
  include Aws::Structure
end
class Anonymous_Struct_306 < Struct
  def exclusive_start_stream_name; end
  def exclusive_start_stream_name=(_); end
  def limit; end
  def limit=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::Kinesis::Types::ListStreamsInput < Anonymous_Struct_306
  include Aws::Structure
end
class Anonymous_Struct_307 < Struct
  def has_more_streams; end
  def has_more_streams=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
  def stream_names; end
  def stream_names=(_); end
end
class Aws::Kinesis::Types::ListStreamsOutput < Anonymous_Struct_307
  include Aws::Structure
end
class Anonymous_Struct_308 < Struct
  def exclusive_start_tag_key; end
  def exclusive_start_tag_key=(_); end
  def limit; end
  def limit=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
  def stream_name; end
  def stream_name=(_); end
end
class Aws::Kinesis::Types::ListTagsForStreamInput < Anonymous_Struct_308
  include Aws::Structure
end
class Anonymous_Struct_309 < Struct
  def has_more_tags; end
  def has_more_tags=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
  def tags; end
  def tags=(_); end
end
class Aws::Kinesis::Types::ListTagsForStreamOutput < Anonymous_Struct_309
  include Aws::Structure
end
class Anonymous_Struct_310 < Struct
  def adjacent_shard_to_merge; end
  def adjacent_shard_to_merge=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
  def shard_to_merge; end
  def shard_to_merge=(_); end
  def stream_name; end
  def stream_name=(_); end
end
class Aws::Kinesis::Types::MergeShardsInput < Anonymous_Struct_310
  include Aws::Structure
end
class Anonymous_Struct_311 < Struct
  def message; end
  def message=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::Kinesis::Types::ProvisionedThroughputExceededException < Anonymous_Struct_311
  include Aws::Structure
end
class Anonymous_Struct_312 < Struct
  def data; end
  def data=(_); end
  def explicit_hash_key; end
  def explicit_hash_key=(_); end
  def partition_key; end
  def partition_key=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
  def sequence_number_for_ordering; end
  def sequence_number_for_ordering=(_); end
  def stream_name; end
  def stream_name=(_); end
end
class Aws::Kinesis::Types::PutRecordInput < Anonymous_Struct_312
  include Aws::Structure
end
class Anonymous_Struct_313 < Struct
  def encryption_type; end
  def encryption_type=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
  def sequence_number; end
  def sequence_number=(_); end
  def shard_id; end
  def shard_id=(_); end
end
class Aws::Kinesis::Types::PutRecordOutput < Anonymous_Struct_313
  include Aws::Structure
end
class Anonymous_Struct_314 < Struct
  def records; end
  def records=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
  def stream_name; end
  def stream_name=(_); end
end
class Aws::Kinesis::Types::PutRecordsInput < Anonymous_Struct_314
  include Aws::Structure
end
class Anonymous_Struct_315 < Struct
  def encryption_type; end
  def encryption_type=(_); end
  def failed_record_count; end
  def failed_record_count=(_); end
  def records; end
  def records=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::Kinesis::Types::PutRecordsOutput < Anonymous_Struct_315
  include Aws::Structure
end
class Anonymous_Struct_316 < Struct
  def data; end
  def data=(_); end
  def explicit_hash_key; end
  def explicit_hash_key=(_); end
  def partition_key; end
  def partition_key=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::Kinesis::Types::PutRecordsRequestEntry < Anonymous_Struct_316
  include Aws::Structure
end
class Anonymous_Struct_317 < Struct
  def error_code; end
  def error_code=(_); end
  def error_message; end
  def error_message=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
  def sequence_number; end
  def sequence_number=(_); end
  def shard_id; end
  def shard_id=(_); end
end
class Aws::Kinesis::Types::PutRecordsResultEntry < Anonymous_Struct_317
  include Aws::Structure
end
class Anonymous_Struct_318 < Struct
  def approximate_arrival_timestamp; end
  def approximate_arrival_timestamp=(_); end
  def data; end
  def data=(_); end
  def encryption_type; end
  def encryption_type=(_); end
  def partition_key; end
  def partition_key=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
  def sequence_number; end
  def sequence_number=(_); end
end
class Aws::Kinesis::Types::Record < Anonymous_Struct_318
  include Aws::Structure
end
class Anonymous_Struct_319 < Struct
  def consumer_name; end
  def consumer_name=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
  def stream_arn; end
  def stream_arn=(_); end
end
class Aws::Kinesis::Types::RegisterStreamConsumerInput < Anonymous_Struct_319
  include Aws::Structure
end
class Anonymous_Struct_320 < Struct
  def consumer; end
  def consumer=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::Kinesis::Types::RegisterStreamConsumerOutput < Anonymous_Struct_320
  include Aws::Structure
end
class Anonymous_Struct_321 < Struct
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
  def stream_name; end
  def stream_name=(_); end
  def tag_keys; end
  def tag_keys=(_); end
end
class Aws::Kinesis::Types::RemoveTagsFromStreamInput < Anonymous_Struct_321
  include Aws::Structure
end
class Anonymous_Struct_322 < Struct
  def event_type; end
  def event_type=(_); end
  def message; end
  def message=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::Kinesis::Types::ResourceInUseException < Anonymous_Struct_322
  include Aws::Structure
end
class Anonymous_Struct_323 < Struct
  def event_type; end
  def event_type=(_); end
  def message; end
  def message=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::Kinesis::Types::ResourceNotFoundException < Anonymous_Struct_323
  include Aws::Structure
end
class Anonymous_Struct_324 < Struct
  def ending_sequence_number; end
  def ending_sequence_number=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
  def starting_sequence_number; end
  def starting_sequence_number=(_); end
end
class Aws::Kinesis::Types::SequenceNumberRange < Anonymous_Struct_324
  include Aws::Structure
end
class Anonymous_Struct_325 < Struct
  def adjacent_parent_shard_id; end
  def adjacent_parent_shard_id=(_); end
  def hash_key_range; end
  def hash_key_range=(_); end
  def parent_shard_id; end
  def parent_shard_id=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
  def sequence_number_range; end
  def sequence_number_range=(_); end
  def shard_id; end
  def shard_id=(_); end
end
class Aws::Kinesis::Types::Shard < Anonymous_Struct_325
  include Aws::Structure
end
class Anonymous_Struct_326 < Struct
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
  def shard_id; end
  def shard_id=(_); end
  def timestamp; end
  def timestamp=(_); end
  def type; end
  def type=(_); end
end
class Aws::Kinesis::Types::ShardFilter < Anonymous_Struct_326
  include Aws::Structure
end
class Anonymous_Struct_327 < Struct
  def new_starting_hash_key; end
  def new_starting_hash_key=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
  def shard_to_split; end
  def shard_to_split=(_); end
  def stream_name; end
  def stream_name=(_); end
end
class Aws::Kinesis::Types::SplitShardInput < Anonymous_Struct_327
  include Aws::Structure
end
class Anonymous_Struct_328 < Struct
  def encryption_type; end
  def encryption_type=(_); end
  def key_id; end
  def key_id=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
  def stream_name; end
  def stream_name=(_); end
end
class Aws::Kinesis::Types::StartStreamEncryptionInput < Anonymous_Struct_328
  include Aws::Structure
end
class Anonymous_Struct_329 < Struct
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
  def sequence_number; end
  def sequence_number=(_); end
  def timestamp; end
  def timestamp=(_); end
  def type; end
  def type=(_); end
end
class Aws::Kinesis::Types::StartingPosition < Anonymous_Struct_329
  include Aws::Structure
end
class Anonymous_Struct_330 < Struct
  def encryption_type; end
  def encryption_type=(_); end
  def key_id; end
  def key_id=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
  def stream_name; end
  def stream_name=(_); end
end
class Aws::Kinesis::Types::StopStreamEncryptionInput < Anonymous_Struct_330
  include Aws::Structure
end
class Anonymous_Struct_331 < Struct
  def encryption_type; end
  def encryption_type=(_); end
  def enhanced_monitoring; end
  def enhanced_monitoring=(_); end
  def has_more_shards; end
  def has_more_shards=(_); end
  def key_id; end
  def key_id=(_); end
  def retention_period_hours; end
  def retention_period_hours=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
  def shards; end
  def shards=(_); end
  def stream_arn; end
  def stream_arn=(_); end
  def stream_creation_timestamp; end
  def stream_creation_timestamp=(_); end
  def stream_mode_details; end
  def stream_mode_details=(_); end
  def stream_name; end
  def stream_name=(_); end
  def stream_status; end
  def stream_status=(_); end
end
class Aws::Kinesis::Types::StreamDescription < Anonymous_Struct_331
  include Aws::Structure
end
class Anonymous_Struct_332 < Struct
  def consumer_count; end
  def consumer_count=(_); end
  def encryption_type; end
  def encryption_type=(_); end
  def enhanced_monitoring; end
  def enhanced_monitoring=(_); end
  def key_id; end
  def key_id=(_); end
  def open_shard_count; end
  def open_shard_count=(_); end
  def retention_period_hours; end
  def retention_period_hours=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
  def stream_arn; end
  def stream_arn=(_); end
  def stream_creation_timestamp; end
  def stream_creation_timestamp=(_); end
  def stream_mode_details; end
  def stream_mode_details=(_); end
  def stream_name; end
  def stream_name=(_); end
  def stream_status; end
  def stream_status=(_); end
end
class Aws::Kinesis::Types::StreamDescriptionSummary < Anonymous_Struct_332
  include Aws::Structure
end
class Anonymous_Struct_333 < Struct
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
  def stream_mode; end
  def stream_mode=(_); end
end
class Aws::Kinesis::Types::StreamModeDetails < Anonymous_Struct_333
  include Aws::Structure
end
class Anonymous_Struct_334 < Struct
  def child_shards; end
  def child_shards=(_); end
  def continuation_sequence_number; end
  def continuation_sequence_number=(_); end
  def event_type; end
  def event_type=(_); end
  def millis_behind_latest; end
  def millis_behind_latest=(_); end
  def records; end
  def records=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::Kinesis::Types::SubscribeToShardEvent < Anonymous_Struct_334
  include Aws::Structure
end
class Anonymous_Struct_335 < Struct
  def consumer_arn; end
  def consumer_arn=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
  def shard_id; end
  def shard_id=(_); end
  def starting_position; end
  def starting_position=(_); end
end
class Aws::Kinesis::Types::SubscribeToShardInput < Anonymous_Struct_335
  include Aws::Structure
end
class Anonymous_Struct_336 < Struct
  def event_stream; end
  def event_stream=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::Kinesis::Types::SubscribeToShardOutput < Anonymous_Struct_336
  include Aws::Structure
end
class Anonymous_Struct_337 < Struct
  def key; end
  def key=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
  def value; end
  def value=(_); end
end
class Aws::Kinesis::Types::Tag < Anonymous_Struct_337
  include Aws::Structure
end
class Anonymous_Struct_338 < Struct
  def scaling_type; end
  def scaling_type=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
  def stream_name; end
  def stream_name=(_); end
  def target_shard_count; end
  def target_shard_count=(_); end
end
class Aws::Kinesis::Types::UpdateShardCountInput < Anonymous_Struct_338
  include Aws::Structure
end
class Anonymous_Struct_339 < Struct
  def current_shard_count; end
  def current_shard_count=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
  def stream_name; end
  def stream_name=(_); end
  def target_shard_count; end
  def target_shard_count=(_); end
end
class Aws::Kinesis::Types::UpdateShardCountOutput < Anonymous_Struct_339
  include Aws::Structure
end
class Anonymous_Struct_340 < Struct
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
  def stream_arn; end
  def stream_arn=(_); end
  def stream_mode_details; end
  def stream_mode_details=(_); end
end
class Aws::Kinesis::Types::UpdateStreamModeInput < Anonymous_Struct_340
  include Aws::Structure
end
class Anonymous_Struct_341 < Struct
  def message; end
  def message=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::Kinesis::Types::ValidationException < Anonymous_Struct_341
  include Aws::Structure
end
class Aws::Kinesis::Types::SubscribeToShardEventStream < Enumerator
  def event_types; end
end
module Aws::Kinesis::ClientApi
  include Seahorse::Model
end
class Aws::Kinesis::Client < Seahorse::Client::Base
  def add_tags_to_stream(params = nil, options = nil); end
  def build_request(operation_name, params = nil); end
  def create_stream(params = nil, options = nil); end
  def decrease_stream_retention_period(params = nil, options = nil); end
  def delete_stream(params = nil, options = nil); end
  def deregister_stream_consumer(params = nil, options = nil); end
  def describe_limits(params = nil, options = nil); end
  def describe_stream(params = nil, options = nil); end
  def describe_stream_consumer(params = nil, options = nil); end
  def describe_stream_summary(params = nil, options = nil); end
  def disable_enhanced_monitoring(params = nil, options = nil); end
  def enable_enhanced_monitoring(params = nil, options = nil); end
  def get_records(params = nil, options = nil); end
  def get_shard_iterator(params = nil, options = nil); end
  def increase_stream_retention_period(params = nil, options = nil); end
  def initialize(*args); end
  def list_shards(params = nil, options = nil); end
  def list_stream_consumers(params = nil, options = nil); end
  def list_streams(params = nil, options = nil); end
  def list_tags_for_stream(params = nil, options = nil); end
  def merge_shards(params = nil, options = nil); end
  def put_record(params = nil, options = nil); end
  def put_records(params = nil, options = nil); end
  def register_stream_consumer(params = nil, options = nil); end
  def remove_tags_from_stream(params = nil, options = nil); end
  def self.errors_module; end
  def self.identifier; end
  def split_shard(params = nil, options = nil); end
  def start_stream_encryption(params = nil, options = nil); end
  def stop_stream_encryption(params = nil, options = nil); end
  def update_shard_count(params = nil, options = nil); end
  def update_stream_mode(params = nil, options = nil); end
  def wait_until(waiter_name, params = nil, options = nil); end
  def waiter(waiter_name, options = nil); end
  def waiter_names; end
  def waiters; end
  include Anonymous_Module_342
  include Aws::ClientStubs
end
module Anonymous_Module_342
  def add_tags_to_stream(*args, &block); end
  def create_stream(*args, &block); end
  def decrease_stream_retention_period(*args, &block); end
  def delete_stream(*args, &block); end
  def deregister_stream_consumer(*args, &block); end
  def describe_limits(*args, &block); end
  def describe_stream(*args, &block); end
  def describe_stream_consumer(*args, &block); end
  def describe_stream_summary(*args, &block); end
  def disable_enhanced_monitoring(*args, &block); end
  def enable_enhanced_monitoring(*args, &block); end
  def get_records(*args, &block); end
  def get_shard_iterator(*args, &block); end
  def increase_stream_retention_period(*args, &block); end
  def list_shards(*args, &block); end
  def list_stream_consumers(*args, &block); end
  def list_streams(*args, &block); end
  def list_tags_for_stream(*args, &block); end
  def merge_shards(*args, &block); end
  def put_record(*args, &block); end
  def put_records(*args, &block); end
  def register_stream_consumer(*args, &block); end
  def remove_tags_from_stream(*args, &block); end
  def split_shard(*args, &block); end
  def start_stream_encryption(*args, &block); end
  def stop_stream_encryption(*args, &block); end
  def subscribe_to_shard(*args, &block); end
  def update_shard_count(*args, &block); end
  def update_stream_mode(*args, &block); end
end
module Aws::Kinesis::Errors
  extend Aws::Errors::DynamicErrors
end
class Aws::Kinesis::Errors::ServiceError < Aws::Errors::ServiceError
end
class Aws::Kinesis::Errors::ExpiredIteratorException < Aws::Kinesis::Errors::ServiceError
  def initialize(context, message, data = nil); end
  def message; end
end
class Aws::Kinesis::Errors::ExpiredNextTokenException < Aws::Kinesis::Errors::ServiceError
  def initialize(context, message, data = nil); end
  def message; end
end
class Aws::Kinesis::Errors::InvalidArgumentException < Aws::Kinesis::Errors::ServiceError
  def initialize(context, message, data = nil); end
  def message; end
end
class Aws::Kinesis::Errors::LimitExceededException < Aws::Kinesis::Errors::ServiceError
  def initialize(context, message, data = nil); end
  def message; end
end
class Aws::Kinesis::Errors::ProvisionedThroughputExceededException < Aws::Kinesis::Errors::ServiceError
  def initialize(context, message, data = nil); end
  def message; end
end
class Aws::Kinesis::Errors::ValidationException < Aws::Kinesis::Errors::ServiceError
  def initialize(context, message, data = nil); end
  def message; end
end
module Aws::Kinesis::Waiters
end
class Aws::Kinesis::Waiters::StreamExists
  def initialize(options); end
  def wait(params = nil); end
  def waiter; end
end
class Aws::Kinesis::Waiters::StreamNotExists
  def initialize(options); end
  def wait(params = nil); end
  def waiter; end
end
class Aws::Kinesis::Resource
  def client; end
  def initialize(options = nil); end
end
class Aws::Kinesis::AsyncClient < Seahorse::Client::AsyncBase
  def _event_stream_handler(type, handler, event_stream_class); end
  def build_request(operation_name, params = nil); end
  def initialize(*args); end
  def self.errors_module; end
  def self.identifier; end
  def subscribe_to_shard(params = nil, options = nil); end
  include Anonymous_Module_343
  include Aws::AsyncClientStubs
end
module Anonymous_Module_343
  def add_tags_to_stream(*args, &block); end
  def create_stream(*args, &block); end
  def decrease_stream_retention_period(*args, &block); end
  def delete_stream(*args, &block); end
  def deregister_stream_consumer(*args, &block); end
  def describe_limits(*args, &block); end
  def describe_stream(*args, &block); end
  def describe_stream_consumer(*args, &block); end
  def describe_stream_summary(*args, &block); end
  def disable_enhanced_monitoring(*args, &block); end
  def enable_enhanced_monitoring(*args, &block); end
  def get_records(*args, &block); end
  def get_shard_iterator(*args, &block); end
  def increase_stream_retention_period(*args, &block); end
  def list_shards(*args, &block); end
  def list_stream_consumers(*args, &block); end
  def list_streams(*args, &block); end
  def list_tags_for_stream(*args, &block); end
  def merge_shards(*args, &block); end
  def put_record(*args, &block); end
  def put_records(*args, &block); end
  def register_stream_consumer(*args, &block); end
  def remove_tags_from_stream(*args, &block); end
  def split_shard(*args, &block); end
  def start_stream_encryption(*args, &block); end
  def stop_stream_encryption(*args, &block); end
  def subscribe_to_shard(*args, &block); end
  def update_shard_count(*args, &block); end
  def update_stream_mode(*args, &block); end
end
module Aws::Kinesis::EventStreams
end
class Aws::Kinesis::EventStreams::SubscribeToShardEventStream
  def event_emitter; end
  def initialize; end
  def on_error_event(&block); end
  def on_event(&block); end
  def on_initial_response_event(&block); end
  def on_internal_failure_exception_event(&block); end
  def on_kms_access_denied_exception_event(&block); end
  def on_kms_disabled_exception_event(&block); end
  def on_kms_invalid_state_exception_event(&block); end
  def on_kms_not_found_exception_event(&block); end
  def on_kms_opt_in_required_event(&block); end
  def on_kms_throttling_exception_event(&block); end
  def on_resource_in_use_exception_event(&block); end
  def on_resource_not_found_exception_event(&block); end
  def on_subscribe_to_shard_event_event(&block); end
  def on_unknown_event(&block); end
end
